
ZEND_DIR = $(srcdir)/Zend
SUBDIRS = Zend ext sapi $(TSRM_DIR) $(REGEX_DIR) . $(PEAR_DIR)

LTLIBRARY_NAME = libphp4.la

LTLIBRARY_SOURCES = \
       main.c internal_functions.c snprintf.c php_sprintf.c \
       configuration-parser.c configuration-scanner.c \
       safe_mode.c fopen-wrappers.c php_realpath.c alloca.c \
       php_ini.c SAPI.c rfc1867.c php_content_types.c strlcpy.c \
       strlcat.c mergesort.c reentrancy.c php_variables.c php_ticks.c php_virtual_cwd.c

LTLIBRARY_DEPENDENCIES = \
		Zend/libZend.la \
		sapi/$(PHP_SAPI)/libsapi.la \
		$(REGEX_LIB) \
		$(EXT_LTLIBS) \
		$(TSRM_LIB)

LTLIBRARY_LDFLAGS = -rpath $(phptempdir) $(EXTRA_LDFLAGS) $(LDFLAGS) $(PHP_RPATHS)
LTLIBRARY_LIBADD = $(LTLIBRARY_DEPENDENCIES) $(EXTRA_LIBS)

PROGRAM_NAME         = $(PHP_PROGRAM)
PROGRAM_SOURCES      = stub.c
PROGRAM_LDADD        = libphp4.la
PROGRAM_LDFLAGS      = -export-dynamic	
PROGRAM_DEPENDENCIES = $(PROGRAM_LDADD)

targets = $(LTLIBRARY_NAME) $(PROGRAM_NAME)

install_targets = install-sapi install-modules

include $(top_srcdir)/build/rules.mk
include $(top_srcdir)/build/library.mk
include $(top_srcdir)/build/program.mk

install-sapi:
	@$(LIBTOOL) --silent --mode=install cp libphp4.la $(phptempdir)/libphp4.la >/dev/null 2>&1
	-@$(mkinstalldirs) $(bindir)
	-@if ! test -r $(phptempdir)/libphp4.$(SHLIB_SUFFIX_NAME); then \
		for i in 0.0.0 0.0 0; do \
			if test -r $(phptempdir)/libphp4.$(SHLIB_SUFFIX_NAME).$$i; then \
				$(LN_S) $(phptempdir)/libphp4.$(SHLIB_SUFFIX_NAME).$$i $(phptempdir)/libphp4.$(SHLIB_SUFFIX_NAME); \
				break; \
			fi; \
		done; \
	fi
	$(INSTALL_IT)

install-modules:
	@test -d modules && \
	$(mkinstalldirs) $(moduledir) && \
	echo "installing shared modules into $(moduledir)" && \
	rm -f modules/*.la && \
	cp modules/* $(moduledir) || true

install-su: install-modules
	(cd pear && $(MAKE) install)

configuration-parser.h configuration-parser.c: $(srcdir)/configuration-parser.y
	$(YACC) -p cfg -v -d $< -o configuration-parser.c

configuration-scanner.c: $(srcdir)/configuration-scanner.l
	$(LEX) -Pcfg -o$@ -i $<

internal_functions.c: internal_functions.c.in config.status
	CONFIG_FILES= CONFIG_HEADERS= ./config.status

.NOEXPORT:
