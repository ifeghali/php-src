#!/bin/sh
# $Id$

eval `grep '^EXTRA_VERSION=' configure.in`
case "$EXTRA_VERSION" in
  *-dev)
    dev=1
    ;;
  *)
    dev=0
    ;;
esac

devok=0
pecl_args=0

# Import 'gold' extensions from PECL
GOLDEN='tidy'

for i in $*; do
	if test "$i" = "--pecl-import"; then
		pecl_args=1
	elif test "$i" = "--copy"; then
		automake_flags=--copy
		pecl_args=0
	elif test "$i" = "--force"; then
		devok=1
		echo "Forcing buildconf"
		pecl_args=0
	elif test $pecl_args -eq 1; then
		# Allow the developer to specify some custom PECL extensions to fetch
		GOLDEN=$GOLDEN" "$i
	fi
done;

cd ext;
for ext in $GOLDEN; do
	cvs co -d $ext pecl/$ext;
done
cd ..;

if test "$dev" = "0" -a "$devok" = "0"; then
  echo "You should not run buildconf in a release package."
  echo "use buildconf --force to override this check."
  exit 1
fi

if test -z "$ZENDDIR"; then
  if grep "PHP_MAJOR_VERSION 5" main/php_version.h >/dev/null; then
    v=5
  else
    v=4
  fi

  if test "$v" = "5"; then
    if test -r "Zend/OBJECTS2_HOWTO"; then
      :
    else
      mv Zend ZendEngine1 2>/dev/null
      mv ZendEngine2 Zend
    fi
  else
    if test -r "Zend/zend_execute_globals.h"; then
	  :
    else
      mv Zend ZendEngine2 2>/dev/null
      mv ZendEngine1 Zend
    fi
  fi
	
  ZENDDIR=Zend
  echo "using default Zend directory"
fi
 
rm -f generated_lists

${MAKE:-make} -s -f build/build.mk AMFLAGS="$automake_flags" ZENDDIR="$ZENDDIR"
